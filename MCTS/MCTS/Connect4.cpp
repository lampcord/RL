#include "Connect4.h"
#include <iostream>
#include <bitset>
#include <unordered_map>
#include <map>
#include <set>
#include <vector>
using namespace std;

namespace Connect4NS
{
	const unsigned long long legal_move_mask = 0b111111100000000000000000000000000000000000;
	const unsigned long long win_table[] =
	{
		0b111100000000000000000000000000000000000000,
		0b000000011110000000000000000000000000000000,
		0b000000000000001111000000000000000000000000,
		0b000000000000000000000111100000000000000000,
		0b000000000000000000000000000011110000000000,
		0b000000000000000000000000000000000001111000,
		0b011110000000000000000000000000000000000000,
		0b000000001111000000000000000000000000000000,
		0b000000000000000111100000000000000000000000,
		0b000000000000000000000011110000000000000000,
		0b000000000000000000000000000001111000000000,
		0b000000000000000000000000000000000000111100,
		0b001111000000000000000000000000000000000000,
		0b000000000111100000000000000000000000000000,
		0b000000000000000011110000000000000000000000,
		0b000000000000000000000001111000000000000000,
		0b000000000000000000000000000000111100000000,
		0b000000000000000000000000000000000000011110,
		0b000111100000000000000000000000000000000000,
		0b000000000011110000000000000000000000000000,
		0b000000000000000001111000000000000000000000,
		0b000000000000000000000000111100000000000000,
		0b000000000000000000000000000000011110000000,
		0b000000000000000000000000000000000000001111,
		0b100000010000001000000100000000000000000000,
		0b000000010000001000000100000010000000000000,
		0b000000000000001000000100000010000001000000,
		0b010000001000000100000010000000000000000000,
		0b000000001000000100000010000001000000000000,
		0b000000000000000100000010000001000000100000,
		0b001000000100000010000001000000000000000000,
		0b000000000100000010000001000000100000000000,
		0b000000000000000010000001000000100000010000,
		0b000100000010000001000000100000000000000000,
		0b000000000010000001000000100000010000000000,
		0b000000000000000001000000100000010000001000,
		0b000010000001000000100000010000000000000000,
		0b000000000001000000100000010000001000000000,
		0b000000000000000000100000010000001000000100,
		0b000001000000100000010000001000000000000000,
		0b000000000000100000010000001000000100000000,
		0b000000000000000000010000001000000100000010,
		0b000000100000010000001000000100000000000000,
		0b000000000000010000001000000100000010000000,
		0b000000000000000000001000000100000010000001,
		0b100000001000000010000000100000000000000000,
		0b000000010000000100000001000000010000000000,
		0b000000000000001000000010000000100000001000,
		0b010000000100000001000000010000000000000000,
		0b000000001000000010000000100000001000000000,
		0b000000000000000100000001000000010000000100,
		0b001000000010000000100000001000000000000000,
		0b000000000100000001000000010000000100000000,
		0b000000000000000010000000100000001000000010,
		0b000100000001000000010000000100000000000000,
		0b000000000010000000100000001000000010000000,
		0b000000000000000001000000010000000100000001,
		0b000100000100000100000100000000000000000000,
		0b000000000010000010000010000010000000000000,
		0b000000000000000001000001000001000001000000,
		0b000010000010000010000010000000000000000000,
		0b000000000001000001000001000001000000000000,
		0b000000000000000000100000100000100000100000,
		0b000001000001000001000001000000000000000000,
		0b000000000000100000100000100000100000000000,
		0b000000000000000000010000010000010000010000,
		0b000000100000100000100000100000000000000000,
		0b000000000000010000010000010000010000000000,
		0b000000000000000000001000001000001000001000
	};

	struct win_set_entry {
		unsigned char count;
		unsigned long long values[11];
	};
	static win_set_entry fast_win_table[] =
	{
		{2,0b000000000000000000000000000000000000001111,0b000000000000000001000000010000000100000001,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000},
		{3,0b000000000000000000000000000000000000011110,0b000000000000000000000000000000000000001111,0b000000000000000010000000100000001000000010,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000},
		{4,0b000000000000000000000000000000000000111100,0b000000000000000000000000000000000000011110,0b000000000000000000000000000000000000001111,0b000000000000000100000001000000010000000100,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000},
		{6,0b000000000000000000000000000000000001111000,0b000000000000000000000000000000000000111100,0b000000000000000000000000000000000000011110,0b000000000000000000000000000000000000001111,0b000000000000001000000010000000100000001000,0b000000000000000000001000001000001000001000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000},
		{4,0b000000000000000000000000000000000001111000,0b000000000000000000000000000000000000111100,0b000000000000000000000000000000000000011110,0b000000000000000000010000010000010000010000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000},
		{3,0b000000000000000000000000000000000001111000,0b000000000000000000000000000000000000111100,0b000000000000000000100000100000100000100000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000},
		{2,0b000000000000000000000000000000000001111000,0b000000000000000001000001000001000001000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000},
		{2,0b000000000000000000000000000000011110000000,0b000000000010000000100000001000000010000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000},
		{4,0b000000000000000000000000000000111100000000,0b000000000000000000000000000000011110000000,0b000000000100000001000000010000000100000000,0b000000000000000001000000010000000100000001,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000},
		{6,0b000000000000000000000000000001111000000000,0b000000000000000000000000000000111100000000,0b000000000000000000000000000000011110000000,0b000000001000000010000000100000001000000000,0b000000000000000010000000100000001000000010,0b000000000000000000001000001000001000001000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000},
		{8,0b000000000000000000000000000011110000000000,0b000000000000000000000000000001111000000000,0b000000000000000000000000000000111100000000,0b000000000000000000000000000000011110000000,0b000000010000000100000001000000010000000000,0b000000000000000100000001000000010000000100,0b000000000000000000010000010000010000010000,0b000000000000010000010000010000010000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000},
		{6,0b000000000000000000000000000011110000000000,0b000000000000000000000000000001111000000000,0b000000000000000000000000000000111100000000,0b000000000000001000000010000000100000001000,0b000000000000000000100000100000100000100000,0b000000000000100000100000100000100000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000},
		{4,0b000000000000000000000000000011110000000000,0b000000000000000000000000000001111000000000,0b000000000000000001000001000001000001000000,0b000000000001000001000001000001000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000},
		{2,0b000000000000000000000000000011110000000000,0b000000000010000010000010000010000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000},
		{2,0b000000000000000000000000111100000000000000,0b000100000001000000010000000100000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000},
		{5,0b000000000000000000000001111000000000000000,0b000000000000000000000000111100000000000000,0b001000000010000000100000001000000000000000,0b000000000010000000100000001000000010000000,0b000000000000000000001000001000001000001000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000},
		{8,0b000000000000000000000011110000000000000000,0b000000000000000000000001111000000000000000,0b000000000000000000000000111100000000000000,0b010000000100000001000000010000000000000000,0b000000000100000001000000010000000100000000,0b000000000000000001000000010000000100000001,0b000000000000000000010000010000010000010000,0b000000000000010000010000010000010000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000},
		{10,0b000000000000000000000111100000000000000000,0b000000000000000000000011110000000000000000,0b000000000000000000000001111000000000000000,0b000000000000000000000000111100000000000000,0b100000001000000010000000100000000000000000,0b000000001000000010000000100000001000000000,0b000000000000000010000000100000001000000010,0b000000000000000000100000100000100000100000,0b000000000000100000100000100000100000000000,0b000000100000100000100000100000000000000000,0b000000000000000000000000000000000000000000},
		{8,0b000000000000000000000111100000000000000000,0b000000000000000000000011110000000000000000,0b000000000000000000000001111000000000000000,0b000000010000000100000001000000010000000000,0b000000000000000100000001000000010000000100,0b000000000000000001000001000001000001000000,0b000000000001000001000001000001000000000000,0b000001000001000001000001000000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000},
		{5,0b000000000000000000000111100000000000000000,0b000000000000000000000011110000000000000000,0b000000000000001000000010000000100000001000,0b000000000010000010000010000010000000000000,0b000010000010000010000010000000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000},
		{2,0b000000000000000000000111100000000000000000,0b000100000100000100000100000000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000},
		{3,0b000000000000000001111000000000000000000000,0b000000000000000000001000000100000010000001,0b000000000000000000001000001000001000001000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000},
		{6,0b000000000000000011110000000000000000000000,0b000000000000000001111000000000000000000000,0b000000000000000000010000001000000100000010,0b000100000001000000010000000100000000000000,0b000000000000000000010000010000010000010000,0b000000000000010000010000010000010000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000},
		{9,0b000000000000000111100000000000000000000000,0b000000000000000011110000000000000000000000,0b000000000000000001111000000000000000000000,0b000000000000000000100000010000001000000100,0b001000000010000000100000001000000000000000,0b000000000010000000100000001000000010000000,0b000000000000000000100000100000100000100000,0b000000000000100000100000100000100000000000,0b000000100000100000100000100000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000},
		{11,0b000000000000001111000000000000000000000000,0b000000000000000111100000000000000000000000,0b000000000000000011110000000000000000000000,0b000000000000000001111000000000000000000000,0b000000000000000001000000100000010000001000,0b010000000100000001000000010000000000000000,0b000000000100000001000000010000000100000000,0b000000000000000001000000010000000100000001,0b000000000000000001000001000001000001000000,0b000000000001000001000001000001000000000000,0b000001000001000001000001000000000000000000},
		{9,0b000000000000001111000000000000000000000000,0b000000000000000111100000000000000000000000,0b000000000000000011110000000000000000000000,0b000000000000000010000001000000100000010000,0b100000001000000010000000100000000000000000,0b000000001000000010000000100000001000000000,0b000000000000000010000000100000001000000010,0b000000000010000010000010000010000000000000,0b000010000010000010000010000000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000},
		{6,0b000000000000001111000000000000000000000000,0b000000000000000111100000000000000000000000,0b000000000000000100000010000001000000100000,0b000000010000000100000001000000010000000000,0b000000000000000100000001000000010000000100,0b000100000100000100000100000000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000},
		{3,0b000000000000001111000000000000000000000000,0b000000000000001000000100000010000001000000,0b000000000000001000000010000000100000001000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000},
		{3,0b000000000011110000000000000000000000000000,0b000000000000010000001000000100000010000000,0b000000000000010000010000010000010000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000},
		{5,0b000000000111100000000000000000000000000000,0b000000000011110000000000000000000000000000,0b000000000000100000010000001000000100000000,0b000000000000100000100000100000100000000000,0b000000100000100000100000100000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000},
		{7,0b000000001111000000000000000000000000000000,0b000000000111100000000000000000000000000000,0b000000000011110000000000000000000000000000,0b000000000001000000100000010000001000000000,0b000100000001000000010000000100000000000000,0b000000000001000001000001000001000000000000,0b000001000001000001000001000000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000},
		{9,0b000000011110000000000000000000000000000000,0b000000001111000000000000000000000000000000,0b000000000111100000000000000000000000000000,0b000000000011110000000000000000000000000000,0b000000000010000001000000100000010000000000,0b001000000010000000100000001000000000000000,0b000000000010000000100000001000000010000000,0b000000000010000010000010000010000000000000,0b000010000010000010000010000000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000},
		{7,0b000000011110000000000000000000000000000000,0b000000001111000000000000000000000000000000,0b000000000111100000000000000000000000000000,0b000000000100000010000001000000100000000000,0b010000000100000001000000010000000000000000,0b000000000100000001000000010000000100000000,0b000100000100000100000100000000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000},
		{5,0b000000011110000000000000000000000000000000,0b000000001111000000000000000000000000000000,0b000000001000000100000010000001000000000000,0b100000001000000010000000100000000000000000,0b000000001000000010000000100000001000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000},
		{3,0b000000011110000000000000000000000000000000,0b000000010000001000000100000010000000000000,0b000000010000000100000001000000010000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000},
		{3,0b000111100000000000000000000000000000000000,0b000000100000010000001000000100000000000000,0b000000100000100000100000100000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000},
		{4,0b001111000000000000000000000000000000000000,0b000111100000000000000000000000000000000000,0b000001000000100000010000001000000000000000,0b000001000001000001000001000000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000},
		{5,0b011110000000000000000000000000000000000000,0b001111000000000000000000000000000000000000,0b000111100000000000000000000000000000000000,0b000010000001000000100000010000000000000000,0b000010000010000010000010000000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000},
		{7,0b111100000000000000000000000000000000000000,0b011110000000000000000000000000000000000000,0b001111000000000000000000000000000000000000,0b000111100000000000000000000000000000000000,0b000100000010000001000000100000000000000000,0b000100000001000000010000000100000000000000,0b000100000100000100000100000000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000},
		{5,0b111100000000000000000000000000000000000000,0b011110000000000000000000000000000000000000,0b001111000000000000000000000000000000000000,0b001000000100000010000001000000000000000000,0b001000000010000000100000001000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000},
		{4,0b111100000000000000000000000000000000000000,0b011110000000000000000000000000000000000000,0b010000001000000100000010000000000000000000,0b010000000100000001000000010000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000},
		{3,0b111100000000000000000000000000000000000000,0b100000010000001000000100000000000000000000,0b100000001000000010000000100000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000,0b000000000000000000000000000000000000000000},
	};

	static map<char, unsigned char> user_keys = {
		{'1', 0b1000000},
		{'2', 0b0100000},
		{'3', 0b0010000},
		{'4', 0b0001000},
		{'5', 0b0000100},
		{'6', 0b0000010},
		{'7', 0b0000001}
	};

	static map<unsigned long long, vector<unsigned long long>> win_table_set;

	
	void Connect4::build_win_table_set()
	{
		win_table_set.clear();

		unsigned long long move_mask = 0b100000000000000000000000000000000000000000;
		for (auto x = 0u; x < 42; x++)
		{
			for (auto win_set : win_table)
			{
				if (win_set & move_mask)
				{
					auto test_move_mask = move_mask << 7;
					if (win_set & test_move_mask)
					{

					}
					else
					{
						win_table_set[move_mask].push_back(win_set);
					}
				}
			}
			move_mask >>= 1;
		}
		for (auto pair : win_table_set)
		{
			auto remaining = 11;
			//cout << bitset<42>(pair.first) << endl;
			cout << "{";
			cout << pair.second.size();
			for (auto mask : pair.second)
			{
				cout << ",";
				cout << "0b" << bitset<42>(mask);
				remaining--;
			}
			for (auto x = 0; x < remaining; x++)
			{
				cout << ",0b" << bitset<42>(0);

			}
			cout << "}," << endl;
		}
	}
	void Connect4NS::Connect4::move(const PositionType& position, const unsigned char player, const MoveType move, MoveResult<PositionType>& move_result)
	{
		unsigned long long blocked = position.position[0] | position.position[1];
		move_result.position = position;
		move_result.next_players_turn = 1 - player;
		move_result.result = GameResult::keep_playing;

		unsigned long long move_mask = move;
		for (auto x = 0u; x < 6; x++)
		{
			if ((blocked & move_mask) == 0)
			{
				move_result.position.position[player] |= move_mask;
				break;
			}
			move_mask = move_mask << 7;
		}

		unsigned long move_ndx;
		_BitScanForward64(&move_ndx, move_mask);
		auto win_compare = move_result.position.position[player];

		for (auto x = 0u; x < fast_win_table[move_ndx].count; x++)
		{
			auto win_entry = fast_win_table[move_ndx].values[x];
			if ((win_entry & win_compare) == win_entry)
			{
				move_result.result = player == 0 ? GameResult::player_0_win : GameResult::player_1_win;
				break;
			}
		}

	}

	void Connect4NS::Connect4::get_initial_position(PositionType& position)
	{
		position.position[0] = 0b0;
		position.position[1] = 0b0;
	}

	void Connect4NS::Connect4::get_legal_moves(const PositionType& position, const unsigned char player, MoveType& legal_moves)
	{
		unsigned long long blocked = position.position[0] | position.position[1];
		blocked = ~blocked;
		blocked &= legal_move_mask;
		blocked = blocked >> 35;
		legal_moves = (MoveType)blocked;
	}

	void Connect4NS::Connect4::render(const PositionType& position)
	{
		unsigned long long win_result = 0b0;
		for (auto player = 0u; player < 2; player++)
		{
			auto win_compare = position.position[player];

			for (auto win_entry : win_table)
			{
				if ((win_entry & win_compare) == win_entry)
				{
					win_result = win_entry;
					break;
				}
			}
			if (win_result != 0b0) break;
		}

		unsigned long long mask = 0b100000000000000000000000000000000000000000;
		for (auto x = 0u; x < 42u; x++)
		{
			if (x % 7 == 0) cout << endl << "+---+---+---+---+---+---+---+" << endl << '|';
			auto c = '.';
			if (position.position[0] & mask)
			{
				c = '0';
			}
			else if (position.position[1] & mask)
			{
				c = '1';
			}
			if (mask & win_result)
			{
				cout << '(' << c << ")|";
			}
			else
			{
				cout << ' ' << c << " |";
			}
			mask = mask >> 1;
		}
		cout << endl;
		cout << "+---+---+---+---+---+---+---+" << endl;
		cout << "  1   2   3   4   5   6   7  " << endl;

	}

	MoveType Connect4NS::Connect4::prompt_user(const PositionType& position, const unsigned char player)
	{
		MoveType legal_moves;
		get_legal_moves(position, player, legal_moves);
		set<char> valid_moves;

		cout << "Enter Move: (";
		for (auto pair : user_keys)
		{
			if (pair.second & legal_moves)
			{
				cout << pair.first << ",";
				valid_moves.insert(pair.first);
			}
		}
		cout << ") " << endl;

		char move_choice;
		while (valid_moves.size() > 0)
		{
			cin >> move_choice;
			if (valid_moves.count(move_choice) > 0)
			{
				return user_keys[move_choice];
			}
		}
		return MoveType();
	}
}
